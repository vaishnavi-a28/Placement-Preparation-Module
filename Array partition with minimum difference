#include <bits/stdc++.h> 
int minSubsetSumDifference(vector<int>& nums, int n)
{
    int k=accumulate(nums.begin(), nums.end(), 0);
    vector<vector<bool>> dp(n, vector<bool>(k+1, false));
    for (int i=0; i<n; i++) dp[i][0]=true;

    if (nums[0]<=k) dp[0][nums[0]]=true;

    for (int index=1; index<n; index++){

        for (int target=1; target<=k; target++){
            bool notTake=dp[index-1][target];

            bool Take=false;

            if (nums[index]<=target){

                Take=dp[index-1][target-nums[index]];

            }

            dp[index][target]=Take||notTake;

        }

    }
        int mini=INT_MAX;

        for (int col=0; col<=k; col++){

            if (dp[n-1][col]==true){

                int s1=col; 
                int s2=k-col; // total minus s1.

                mini=min(mini, abs(s1-s2));

            }

    }

    return mini;

}
