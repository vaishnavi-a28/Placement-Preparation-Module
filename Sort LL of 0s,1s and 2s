**1st Approach**

Node* sortList(Node *head){
    // Write your code here.
    int zero=0,one=0,two=0;
    Node* temp=head;
    while(temp!=NULL){
        if(temp->data==0)
         zero++;
        else if(temp->data==1)
         one++;
        else if(temp->data==2)
         two++;
        temp=temp->next;
    }
    temp=head;
    while(temp!=NULL){
      if (zero != 0) {
        temp->data = 0;
        zero--;
        temp=temp->next;
      }
      else if(one!=0){
          temp->data=1;
          one--;
          temp=temp->next;
      }
      else if(two!=0){
          temp->data=2;
          two--;
          temp=temp->next;
      }
    }
    return head;
}

**2nd Approach**

void inserttail(Node* curr,Node* &tail){
    tail->next=curr;
    tail=curr;
}

Node* sortList(Node *head){
    // Write your code here.
    Node* zerohead= new Node(-1);
    Node* zerotail=zerohead;
    Node* onehead= new Node(-1);
    Node* onetail=onehead;
    Node* twohead= new Node(-1);
    Node* twotail=twohead;
    Node* temp=head;
    while(temp!=NULL){
        if(temp->data==0){
            inserttail(temp,zerotail);
        }
        else if(temp->data==1){
            inserttail(temp,onetail);
        }
        else if(temp->data==2){
            inserttail(temp,twotail);
        }
        temp=temp->next;
    }
    if(onehead->next!=NULL){
        onetail->next=twohead->next;
        zerotail->next=onehead->next;
    }
    else{
        zerotail->next=twohead->next;
    }
    twotail->next=NULL;
    head=zerohead->next;
    delete zerohead;
    delete onehead;
    delete twohead;
    delete zerotail;
    delete onetail;
    delete twotail;
    return head;
}
