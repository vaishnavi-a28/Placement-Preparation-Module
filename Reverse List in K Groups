
  Definition for singly-linked list.
  class Node {
  public:
      int data;
      Node *next;
      Node() : data(0), next(nullptr) {}
      Node(int x) : data(x), next(nullptr) {}
      Node(int x, Node *next) : data(x), next(next) {}
 };

int findlength(Node* head){
    int len=0;
    Node* temp=head;
    while(temp!=NULL){
        temp=temp->next;
        len++;
    }
    return len;
}
Node* kReverse(Node* head, int k) {
    // Write your code here.
    if(head==NULL){
        return NULL;
    }
    int length= findlength(head);
    Node* forward=NULL;
    int cnt=0;
    Node* prev=NULL;
    Node* curr=head;
    while(curr!=NULL && cnt<k){
        forward=curr->next;
        curr->next=prev;
        prev=curr;
        curr=forward;
        cnt++;
    }
    length=length-cnt;
    if(forward!=NULL && length>=k){
        head->next= kReverse(forward, k);
    }
    else{
        head->next=forward;
    }
    return prev;
}
