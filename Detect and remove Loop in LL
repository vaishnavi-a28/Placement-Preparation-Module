/*************************************************
    
    class Node {
        public :

        int data;
        Node *next;

        Node(int data) {
            this -> data = data;
            this -> next = NULL;
        }
    };

*************************************************/

Node* detectLoop(Node* head){
    if(head==NULL)
     return NULL;
    Node* slow=head;
    Node* fast=head;
    while(slow!=NULL && fast!=NULL){
        fast=fast->next;
        if(fast!=NULL)
         fast=fast->next;
        slow=slow->next;
        if(slow==fast)
         return slow;
    }
    return NULL;
}

Node* startofloop(Node* head){
    if(head==NULL)
     return NULL;
    Node* intersection= detectLoop(head);
    if(intersection==NULL)
     return NULL;
    Node* slow=head;
    while(slow!=intersection){
        slow=slow->next;
        intersection=intersection->next;
    }
    return slow;
}

Node *removeLoop(Node *head)
{
    // Write your code here.
    Node* sol=startofloop(head);
    if(sol==NULL)
     return head;
    Node* temp=sol;
    while(temp->next!=sol){
        temp=temp->next;
    }
    temp->next=NULL;
    return head;

}
