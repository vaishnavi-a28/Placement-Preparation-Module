Node<int>* reverse(Node<int>* head){
    Node<int>* prev=NULL;
    Node<int>* curr=head;
    Node<int>* forward=NULL;
    while(curr!=NULL){
        forward=curr->next;
        curr->next=prev;
        prev=curr;
        curr=forward;
    }
    return prev;
}

void insertatTail(Node<int>* &head,Node<int>* &tail,int value){
    Node<int>* temp=new Node<int>(value);
    if(head==NULL){
        head=temp;
        tail=temp;
        return ;
    }
    else{
        tail->next=temp;
        tail=temp;
    }
}

Node<int>* add(Node<int>* head1,Node<int>* head2){
    int carry=0;

    Node<int>* anshead=NULL;
    Node<int>* anstail=NULL;

    while(head1!=NULL || head2!=NULL || carry!=0){

        int val1=0;
        if(head1!=NULL)
         val1=head1->data;
        int val2=0;
        if(head2!=NULL)
         val2=head2->data;
        
        int val = val1 + val2 + carry;
        int digit = val%10;

        insertatTail(anshead,anstail,digit);

        carry= val/10;
        if(head1!=NULL)
         head1=head1->next;
        if(head2!=NULL)
         head2=head2->next;
    }
    return anshead;
}

Node<int>* addTwoLists(Node<int>* first, Node<int>* second) {
    // Write your code here.
    
    first = reverse(first);
    second = reverse(second);

    Node<int>* ans = add(first,second);

    ans = reverse(ans);
    return ans;
}
