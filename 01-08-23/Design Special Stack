#include <stack>
#include <limits.h>
class SpecialStack {
    public:
    stack<int> s;
    int mini=INT_MAX;   
    void push(int data) {
        // Implement the push() function.
        if (s.empty()) {
          s.push(data);
          mini = data;
        }
        else{
           if(data<mini){
               s.push(2*data-mini);
               mini=data;
           } 
           else s.push(data);
        }
    }

    void pop() {
        // Implement the pop() function.
        if(!s.empty()){
         
        int curr=s.top();
        if(curr>mini){
            s.pop();
        } else {
          int prevMin = mini;
          int val = 2 * mini - curr;
          mini = val;
          s.pop();
        }
        }
    }

    int top() {
        // Implement the top() function.
        if(s.empty())
         return -1;
        int curr=s.top();
        if(curr<mini){
            return mini;
        }
        else return curr;
    }

    int getMin() {
        // Implement the getMin() function.
        if(s.empty())
         return -1;
        else
         return mini;
    }  
};
