Node* findIntersection(Node *firstHead, Node *secondHead)
{
        int n = 0;
        int m = 0;
        Node* ptr1 = firstHead;

        Node* ptr2 = secondHead;

        while(ptr1 != NULL){
            n++;
            ptr1 = ptr1 -> next;
        }

        while(ptr2 != NULL){
            m++;
            ptr2 = ptr2 -> next;
        }

        int t = abs(n - m);
        if(n > m){

            while(t){
                firstHead = firstHead -> next;
                t--;
            }
        }
        else{
            while(t){
                secondHead = secondHead -> next;
                t--;
            }
        }

        while(firstHead != NULL and secondHead != NULL){
            if(firstHead == secondHead){
                return firstHead;
            }
            firstHead = firstHead -> next;
            secondHead = secondHead -> next;
        }
        return NULL;
}
